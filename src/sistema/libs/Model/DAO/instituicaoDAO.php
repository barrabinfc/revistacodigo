<?php
/** @package Sistema::Model::DAO */

/** import supporting libraries */
require_once("verysimple/Phreeze/Phreezable.php");
require_once("instituicaoMap.php");

/**
 * instituicaoDAO provides object-oriented access to the institution table.  This
 * class is automatically generated by ClassBuilder.
 *
 * WARNING: THIS IS AN AUTO-GENERATED FILE
 *
 * This file should generally not be edited by hand except in special circumstances.
 * Add any custom business logic to the Model class which is extended from this DAO class.
 * Leaving this file alone will allow easy re-generation of all DAOs in the event of schema changes
 *
 * @package Sistema::Model::DAO
 * @author ClassBuilder
 * @version 1.0
 */
class instituicaoDAO extends Phreezable
{
	/** @var int */
	public $Idinstitution;

	/** @var string */
	public $Name;

	/** @var string */
	public $Description;

	/** @var string */
	public $Uri;

	/** @var string */
	public $Otherinformation;

	/** @var string */
	public $Code;

	/** @var int */
	public $Timezone;

	/** @var blob */
	public $Thumbnail;


	/**
	 * Returns a dataset of City objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetCitys($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_city_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Creator objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetCreators($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_creator_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Datalog objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetDatalogs($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_datalog_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Documentation objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetDocumentations($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_documentation_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Exposition objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetExpositions($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_exposition_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Fond objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetFonds($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_fond_institution1", $criteria);
	}

	/**
	 * Returns a dataset of History objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetHistorys($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_history_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Holder objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetHolders($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_holder_institution1", $criteria);
	}

	/**
	 * Returns a dataset of InstitutionLevel objects with matching InstitutionIdinstitution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetInstitutionLevels($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "FK_4pu1mko6s7rh12iydqohhngj", $criteria);
	}

	/**
	 * Returns a dataset of InstitutionMedia objects with matching InstitutionIdinstitution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetInstitutionMedias($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "FK_b8huwidanw431gu321kah8d3d", $criteria);
	}

	/**
	 * Returns a dataset of Level objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetLevels($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_serie_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Media objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetMedias($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_media_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Ncontact objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetNcontacts($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "FK_q27ejta8y2arisfx6k2v8y01v", $criteria);
	}

	/**
	 * Returns a dataset of Nreference objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetNreferences($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "FK_360fxrl1q9vf3b3yu70b0lxl1", $criteria);
	}

	/**
	 * Returns a dataset of Reference objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetReferences($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_reference_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Role objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetRoles($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_role_institution1", $criteria);
	}

	/**
	 * Returns a dataset of Title objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetTitles($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_title_institution1", $criteria);
	}

	/**
	 * Returns a dataset of User objects with matching Institution
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetUsers($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "fk_user_institution1", $criteria);
	}

	/**
	 * Returns the foreign object based on the value of Timezone
	 * @return Timezones
	 */
	public function GetTimezoneTimezones()
	{
		return $this->_phreezer->GetManyToOne($this, "fk_institution_timezone");
	}


}
?>